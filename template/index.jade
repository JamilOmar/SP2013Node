doctype 5
html(lang="en")
  head
    title= pageTitle
    script
        var hostweburl = decodeURIComponent("#{siteUrl}");
        var appweburl = "#{spAppWebUrl}";
        console.log('hostweb is: ' + hostweburl);
        console.log('appweb is: ' + appweburl);
    script(src='/socket.io/socket.io.js')
    script(src='/public/jquery-1.9.1.min.js')
    script(src='/public/sp.ui.controls.js')
    script(src='/public/toastr-1.1.5.min.js')
    link(rel='stylesheet', href='/public/toastr.min.css', type='text/css' )
    script
       var socket = io.connect(location.origin + '/SPio');
       socket.on('sendTimer', function (data) {
         console.log('sending timer');
         var time = Date.now();
         socket.emit('timerSent', { time: time });
       });
       socket.on('timerPingback', function (data) {
         console.log('recieved pingback');
         console.log(data);
         console.log(Date.now());
         console.log(Date.now() - data.time);
         toastr.info(Date.now() - data.time);
       });
       socket.on('yo', function (data) {
         console.log(data);
       });
       $(document).ready(function () {
            var scriptbase = "#{siteUrl}" + "/_layouts/15/";
            $.getScript(scriptbase + "SP.RequestExecutor.js", execCrossDomainRequest);
            var options = {};
            options.siteTitle = "Awesome app";
            options.siteUrl = "#{siteUrl}";
            options.appTitle = "BjartwolfIncNodeApp";
            var nav = new SP.UI.Controls.Navigation("SPChrome", options );
       });
       function execCrossDomainRequest() {
            var executor;
            // Initialize the RequestExecutor with the app web URL.
            executor = new SP.RequestExecutor(appweburl);
                            // Issue the call against the host web.
            // To get the title using REST we can hit the endpoint:
            //      app_web_url/_api/SP.AppContextSite(@target)/web/title?@target='siteUrl'
            // The response formats the data in the JSON format.
            // The functions successHandler and errorHandler attend the
            //      success and error events respectively.
            requestUrl = appweburl + "/_api/SP.AppContextSite(@target)/web/title?@target='" + hostweburl + "'";
            console.log(requestUrl);
            executor.executeAsync( {
                    url: requestUrl, 
                    method: "GET",
                    headers: { "Accept": "application/json; odata=verbose" },
                    success: successHandler,
                    error: errorHandler
                    }
            );
        }
        function successHandler(data) {
            var jsonObject = JSON.parse(data.body);
            toastr.info(jsonObject.d.Title);
        }
        function errorHandler(data, errorCode, errorMessage) {
            toastr.error(errorMessage);                
        }
  body
    #SPChrome(data-ms-control='SP.UI.Controls.Navigation', data-ms-options='{ "siteUrl": "#{siteUrl}", "appIconUrl": "public/icon.png","appTitle": "Awesome nodejs app", "appHelpPageUrl": "Help.html", "settingsLinks": [ {"linkUrl": "/lists", "displayName": "Get lists"}, {"linkUrl": "www.vg.no", "displayName": "Im in ur SharePoints"}]}')
    #container
    p I thinks you are #{token} 

